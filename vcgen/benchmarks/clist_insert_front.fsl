(Var x Loc)
(Var y Loc)

(Var head Loc)
(Var tail Loc)
(Var ret Loc)
(Var nxt Loc)
(Var new_nxt Loc)
(Var hd_nxt Loc)
(Var tmp Loc)
(Function next Loc Loc)
(RecFunction Lseg Loc Loc Bool)
(RecDef (Lseg x y) (ite (= x y) True (and (Lseg (next x) y) (not (IsMember x (Sp (Lseg (antiSp (next x)) y)))))   )    )

(Program circular_list_insert_front (x nxt ret))
(Pre (and (= nxt (next x)) 
(Lseg nxt x)
(not (IsMember x (SPLseg nxt x)))
))
(Post (and (= ret (next x))
(Lseg ret x)
(not (IsMember x (SPLseg ret x)))
))

(alloc new_nxt)
(assume (not (= x nil)))
(assign tmp (next x))
(assign (next new_nxt) tmp)
(assign (next x) new_nxt)
(assign ret new_nxt)
(return)
